<launch>
    <!-- Run the architecture's component and test it based on random-based stimulus. -->

    <rosparam param="config/environment_size"> [20.0, 15.0] </rosparam>
    
    <rosparam param="test/random_plan_points"> [2, 8] </rosparam>
    <rosparam param="test/random_plan_time"> [0.2, 0.8] </rosparam>
    <rosparam param="test/random_motion_time"> [0.1, 1.0] </rosparam>
    <rosparam param="test/random_sense/battery_charge"> [10.0, 15.0] </rosparam>

    <rosparam param="test/random_sense/active"> True </rosparam>
    <rosparam param="test/random_sense/battery_time"> [35.0, 50.0] </rosparam>


    <node pkg="armor" 
          type="execute"
          name="armor_service" 
          args="it.emarolab.armor.ARMORMainService"/>
    
    <node pkg = "exprob_assignment1"  
          type = "state_machine.py" 
          name = "state_machine"
          output = "screen"
    > </node>
    
    <node pkg = "exprob_assignment1"  
          type = "planner.py"
          name = "planner"
          launch-prefix="xterm -e"
          output = "screen"
    > </node>
    
    <node pkg = "exprob_assignment1"  
          type = "controller.py"
          name = "controller"
          launch-prefix="xterm -e"
          output = "screen"
    > </node>
    
    <node pkg = "exprob_assignment1"  
          type = "robot_battery_state.py"
          name = "robot_battery_state"
          launch-prefix="xterm -e"
          output = "screen"
    > </node>
    
</launch>
